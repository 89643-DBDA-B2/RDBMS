1. Write a query that counts the number of salespeople registering orders for eachday.
(If a salesperson has more than one order on a given day, he or she should be
counted only once.
mysql> select odate,count(distinct snum) from orders group by odate;
+------------+----------------------+
| odate      | count(distinct snum) |
+------------+----------------------+
| 1990-10-03 |                    4 |
| 1990-10-04 |                    3 |
+------------+----------------------+

2. Write a query on the Customers table that will find the highest rating in each city. Put the output in this form:
For the city (city), the highest rating is : (rating).
mysql> select concat('For the city ',city, ', the highest rating is :', max(rating), '.') statement from customers  group by city;
+----------------------------------------------------+
| statement                                          |
+----------------------------------------------------+
| For the city London, the highest rating is :100.   |
| For the city Rome, the highest rating is :200.     |
| For the city San Jose, the highest rating is :300. |
| For the city Berlin, the highest rating is :300.   |
+----------------------------------------------------+
3 Write a query that totals the orders for each day and places the results in descending order.
mysql> select distinct odate, count(onum) tot from orders group by odate order by odate desc;
+------------+-----+
| odate      | tot |
+------------+-----+
| 1990-10-04 |   5 |
| 1990-10-03 |   5 |
+------------+-----+

4. Write a query that selects the total amount in orders for each salesperson for whom
this total is greater than the average amount of the order in the table.
(Note Use the average amount value directly →2565.84)
mysql> select snum, sum(amt) tot from orders group by snum having tot > (select avg(amt) from orders);
+------+----------+
| snum | tot      |
+------+----------+
| 1001 | 15382.07 |
| 1002 |  5546.15 |
+------+----------+
5. Write a query that selects the highest rating in each city.
mysql> select city , max(rating) from customers group by city;
+----------+-------------+
| city     | max(rating) |
+----------+-------------+
| London   |         100 |
| Rome     |         200 |
| San Jose |         300 |
| Berlin   |         300 |
+----------+-------------+
6. Largest order taken by each salesperson with order value more than Rs.3000.
mysql> select snum, max(amt) large_ord from orders group by snum having large_ord>3000;
+------+-----------+
| snum | large_ord |
+------+-----------+
| 1001 |   9891.88 |
| 1002 |   5160.45 |
+------+-----------+
7. Select each customer smallest order.
mysql> select cnum, min(amt) small_ord from orders group by cnum;
+------+-----------+
| cnum | small_ord |
+------+-----------+
| 2008 |     18.69 |
| 2001 |    767.19 |
| 2007 |   1900.10 |
| 2003 |   5160.45 |
| 2002 |   1713.23 |
| 2004 |     75.75 |
| 2006 |   4723.00 |
+------+-----------+





Note : To solve below queries use “hr” database
1. Display manager ID and number of employees managed by the manager.
mysql> select manager_id, count(employee_id) from employees group by manager_id;
+------------+--------------------+
| manager_id | count(employee_id) |
+------------+--------------------+
|          0 |                  1 |
|        100 |                 14 |
|        101 |                  5 |
|        102 |                  1 |
|        103 |                  4 |
|        108 |                  5 |
|        114 |                  5 |
|        120 |                  8 |
|        121 |                  8 |
|        122 |                  8 |
|        123 |                  8 |
|        124 |                  8 |
|        145 |                  6 |
|        146 |                  6 |
|        147 |                  6 |
|        148 |                  6 |
|        149 |                  6 |
|        201 |                  1 |
|        205 |                  1 |
+------------+--------------------+
2. Display the country ID and number of cities we have in the country.
mysql> select country_id, count(city) from locations group by country_id;
+------------+-------------+
| country_id | count(city) |
+------------+-------------+
| "          |           1 |
| AU         |           1 |
| BR         |           1 |
| CA         |           2 |
| CH         |           2 |
| CN         |           1 |
| DE         |           1 |
| IN         |           1 |
| IT         |           2 |
| JP         |           2 |
| NL         |           1 |
| Ox         |           1 |
| SG         |           1 |
| UK         |           2 |
| US         |           4 |
+------------+-------------+

3. Display average salary of employees in each department who have commission
percentage.
mysql> select department_id, avg(salary) avg_sal from employees where commission_pct > 0 group by department_id ;
+---------------+-------------+
| department_id | avg_sal     |
+---------------+-------------+
|             0 | 7000.000000 |
|            80 | 8955.882353 |
+---------------+-------------+
4. Display job ID, number of employees, sum of salary, and difference between highest
salary and lowest salary of the employees of the job.
mysql> select job_id, count(employee_id) empcnt, sum(salary) tot, (max(salary)-min(salary)) diff from employees group by job_id;
+------------+--------+-----------+---------+
| job_id     | empcnt | tot       | diff    |
+------------+--------+-----------+---------+
| AC_ACCOUNT |      1 |   8300.00 |    0.00 |
| AC_MGR     |      1 |  12000.00 |    0.00 |
| AD_ASST    |      1 |   4400.00 |    0.00 |
| AD_PRES    |      1 |  24000.00 |    0.00 |
| AD_VP      |      2 |  34000.00 |    0.00 |
| FI_ACCOUNT |      5 |  39600.00 | 2100.00 |
| FI_MGR     |      1 |  12000.00 |    0.00 |
| HR_REP     |      1 |   6500.00 |    0.00 |
| IT_PROG    |      5 |  28800.00 | 4800.00 |
| MK_MAN     |      1 |  13000.00 |    0.00 |
| MK_REP     |      1 |   6000.00 |    0.00 |
| PR_REP     |      1 |  10000.00 |    0.00 |
| PU_CLERK   |      5 |  13900.00 |  600.00 |
| PU_MAN     |      1 |  11000.00 |    0.00 |
| SA_MAN     |      5 |  61000.00 | 3500.00 |
| SA_REP     |     30 | 250500.00 | 5400.00 |
| SH_CLERK   |     20 |  64300.00 | 1700.00 |
| ST_CLERK   |     20 |  55700.00 | 1500.00 |
| ST_MAN     |      5 |  36400.00 | 2400.00 |
+------------+--------+-----------+---------+

5. Display job ID for jobs with average salary more than 10000.
mysql> select distinct job_id from employees where salary > 10000;
+---------+
| job_id  |
+---------+
| AC_MGR  |
| AD_PRES |
| AD_VP   |
| FI_MGR  |
| MK_MAN  |
| PU_MAN  |
| SA_MAN  |
| SA_REP  |
+---------+
6. Display years in which more than 10 employees joined.
mysql> select year(hire_date) year,count(employee_id) cnt from employees group by year having cnt > 10;
+------+-----+
| year | cnt |
+------+-----+
| 1987 | 107 |
+------+-----+

7. Display departments in which more than five employees have commission
percentage.
mysql> select department_id, count(employee_id) empc from employees where employee_id>0 group by department_id having empc > 5;
+---------------+------+
| department_id | empc |
+---------------+------+
|            30 |    6 |
|            50 |   45 |
|            80 |   34 |
|           100 |    6 |
+---------------+------+

8. Display employee ID for employees who did more than one job in the past.
mysql> select employee_id, count(job_id) from job_history group by employee_id;
+-------------+---------------+
| employee_id | count(job_id) |
+-------------+---------------+
|           0 |             1 |
|         101 |             2 |
|         102 |             1 |
|         114 |             1 |
|         122 |             1 |
|         176 |             2 |
|         200 |             2 |
|         201 |             1 |
+-------------+---------------+

9. Display job ID of jobs that were done by more than 3 employees for more than 100
days.
mysql> select job_id, count(employee_id) empcnt from job_history where datediff(end_date,start_date)>100 group by job_id having empcnt >3;
Empty set (0.01 sec)

10. Display department ID, year, and Number of employees joined.
mysql> select department_id, year(hire_date) year, count(employee_id) empjoin from employees group by department_id,year;
+---------------+------+---------+
| department_id | year | empjoin |
+---------------+------+---------+
|            90 | 1987 |       3 |
|            60 | 1987 |       5 |
|           100 | 1987 |       6 |
|            30 | 1987 |       6 |
|            50 | 1987 |      45 |
|            80 | 1987 |      34 |
|             0 | 1987 |       1 |
|            10 | 1987 |       1 |
|            20 | 1987 |       2 |
|            40 | 1987 |       1 |
|            70 | 1987 |       1 |
|           110 | 1987 |       2 |
+---------------+------+---------+


11. Display how many employees joined in each month of the current year.
mysql> select monthname(hire_date) month, count(employee_id) empjoin from employees
+-----------+---------+
| month     | empjoin |
+-----------+---------+
| June      |      14 |
| July      |      31 |
| August    |      31 |
| September |      30 |
| October   |       1 |
+-----------+---------+
12. Display details of departments in which the maximum salary is more than 10000.
 mysql> select department_id, max(salary) max_sal from employees group by departm
ent_id having max_sal>10000;
+---------------+----------+
| department_id | max_sal  |
+---------------+----------+
|            20 | 13000.00 |
|            30 | 11000.00 |
|            80 | 14000.00 |
|            90 | 24000.00 |
|           100 | 12000.00 |
|           110 | 12000.00 |
+---------------+----------+

